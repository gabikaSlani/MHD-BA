swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: ""
basePath: "/api"
schemes:
  - "https"
  - "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /getAllRoutes:
    get:
      description: ""
      consumes: []
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Route'
  /getRouteDetail:
    get:
      consumes: []
      parameters:
        - in: query
          name: routeId
          type: integer
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/RouteDetail'
        400:
          description: "Route with this id doesnt exists"
  /getAllStops:
    get:
      description: ""
      consumes: []
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Stop'
  /getAllStopAreas:
    get:
      description: ""
      consumes: []
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: '#/definitions/StopArea'
  /findPaths:
    post:
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FindPathParameters'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
        400:
          description: Bad request
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: string
                maxLength: 100
              message:
                type: string
                maxLength: 500
  /import:
    get:
      description: "Import static timetable"
      consumes: []
      responses:
        200:
          description: "Successfully imported"
  /getActualDateTime:
    get:
      description: "Return actual date and time"
      consumes: []
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/DateTimeObject'

definitions:
  Route:
    type: "object"
    properties:
      id:
        type: "integer"
      routeInfo:
        $ref: '#/definitions/RouteInfo'
      startStopName:
        $ref: '#/definitions/StopName'
      endStopName:
        $ref: '#/definitions/StopName'
  Stop:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        $ref: '#/definitions/StopName'
      coords:
        $ref: '#/definitions/Coords'
      stopArea:
        $ref: '#/definitions/StopArea'
  StopInfo:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        $ref: '#/definitions/StopName'
      coords:
        $ref: '#/definitions/Coords'
      onRequest:
        type: "boolean"
      zone:
        type: "integer"
        enum:
          - 100
          - 101
  StopArea:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        $ref: '#/definitions/StopName'
      routes:
        type: "array"
        items:
          $ref: '#/definitions/RouteInfo'
  StopName:
    type: "object"
    properties:
      name:
        type: "string"
  RouteInfo:
    type: "object"
    properties:
      name:
        type: "string"
      mode:
        type: "string"
        enum:
          - "tramway"
          - "trolleybus"
          - "bus"
  RouteDetail:
    type: "object"
    properties:
      routeInfo:
        $ref: '#/definitions/RouteInfo'
      stops:
        type: "array"
        items:
          $ref: '#/definitions/StopInfo'
  Coords:
    type: "object"
    properties:
      lat:
        type: "string"
      lng:
        type: "string"
  TripStop:
    type: "object"
    properties:
      name:
        $ref: '#/definitions/StopName'
      onRequest:
        type: "boolean"
      zone:
        type: "integer"
        enum:
          - 100
          - 101
      departureTime:
        type: "string"
  TripSegment:
    type: "object"
    properties:
      delay:
        type: "integer"
      lowFloor:
        type: "boolean"
      routeInfo:
        $ref: '#/definitions/RouteInfo'
      tripStops:
        type: "array"
        items:
          $ref: '#/definitions/TripStop'
      finalStop:
        $ref: '#/definitions/StopName'
      boardingTime:
        type: "string"
      getOffTime:
        type: "string"
      leftTheOriginStop:
        type: "boolean"
  Action:
    type: "object"
    properties:
      startStop:
        $ref: '#/definitions/StopName'
      endStop:
        $ref: '#/definitions/StopName'
      type:
        type: "string"
        enum:
          - "trip"
          - "walking"
      walkingTime:
        type: "integer"
      trip:
        $ref: '#/definitions/TripSegment'
  Card:
    type: "object"
    properties:
      startStop:
        $ref: '#/definitions/StopName'
      endStop:
        $ref: '#/definitions/StopName'
      departureTime:
        type: 'string'
      arrivalTime:
        type: 'string'
      duration:
        type: "integer"
      date:
        type: "string"
      actions:
        type: "array"
        items:
          $ref: '#/definitions/Action'
  StartPoint:
    type: "object"
    properties:
      stopAreaId:
        type: "integer"
      coords:
        $ref: '#/definitions/Coords'
  FindPathParameters:
    type: "object"
    properties:
      from:
        $ref: '#/definitions/StartPoint'
      to:
        description: "stopAreaId"
        type: "integer"
      timeFrom:
        $ref: '#/definitions/DateTimeObject'
      maxNumberOfTransfers:
        type: "integer"
        enum:
          - 0
          - 1
          - 2
          - 3
      maxTimeOfWalking:
        description: "minutes"
        type: "integer"
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 8
          - 10
      minTimeForTransfer:
        description: "minutes"
        type: "integer"
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
      onlyLowFloor:
        type: "boolean"
  DateTimeObject:
    type: "object"
    properties:
      day:
        type: "integer"
      month:
        type: "integer"
      year:
        type: "integer"
      hour:
        type: "integer"
      minute:
        type: "integer"
      second:
        type: "integer"

